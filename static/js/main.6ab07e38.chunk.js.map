{"version":3,"sources":["components/Btn.tsx","components/Display.tsx","App.tsx","index.tsx"],"names":["Btn","start","wait","reset","className","type","onClick","Display","time","hour","Math","floor","min","sec","slice","App","useState","setTime","timeOn","setTimeOn","useEffect","unsubscribe","Subject","interval","pipe","takeUntil","subscribe","val","next","complete","clicks$","fromEvent","document","buffer","throttleTime","filter","clickArray","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"wUAQaA,EAAuB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClD,OACE,sBAAKC,UAAU,gCAAf,UACE,wBACEA,UAAU,kBACVC,KAAK,SACLC,QAASL,EAHX,0BAOA,wBACEG,UAAU,uBACVC,KAAK,SACLC,QAASJ,EAHX,kBAOA,wBACEE,UAAU,kBACVC,KAAK,SACLC,QAASH,EAHX,uBCnBOI,EAA2B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnCC,EAAI,WAAOC,KAAKC,MAAOH,EAAI,KAAuB,KAClDI,EAAG,WAAOF,KAAKC,MAAMH,EAAO,MAC5BK,EAAG,WAAOH,KAAKC,MAAOH,EAAO,IAAO,KAE1C,OACE,sBAAKJ,UAAU,qCAAf,UACE,yCAAUK,EAAKK,OAAO,GAAtB,QACA,yCAAUF,EAAIE,OAAO,GAArB,QACA,+BAAOD,EAAIC,OAAO,SCNXC,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA4BD,oBAAS,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAc,IAAIC,IAUxB,OARAC,YAAS,IACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLR,GACFD,GAAQ,SAAAU,GAAG,OAAIA,EAAM,QAIpB,WACLN,EAAYO,KAAK,GACjBP,EAAYQ,cAEb,CAACX,IA0BJ,OACE,qCACE,cAAC,EAAD,CAASV,KAAMA,IACf,cAAC,EAAD,CACEP,MA5BkB,WACjBiB,EAGHD,EAAQ,GAFRE,GAAU,IA2BRjB,KArBa,WACjB,IAAM4B,EAAUC,YAAUC,SAAU,SAEpCF,EAAQN,KACNS,YAAOH,EAAQN,KAAKU,YAAa,OACjCC,aAAO,SAAAC,GAAU,OAAIA,EAAWC,OAAS,MAGxCX,WAAU,kBAAMP,GAAU,OAczBhB,MAXc,WAClBc,EAAQ,GACRE,GAAU,UC7CdmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,W","file":"static/js/main.6ab07e38.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  start: () => void;\n  wait: () => void;\n  reset: () => void;\n}\n\nexport const Btn: React.FC<Props> = ({ start, wait, reset }) => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <button\n        className=\"btn btn-primary\"\n        type=\"button\"\n        onClick={start}\n      >\n        Start / Stop\n      </button>\n      <button\n        className=\"btn btn-primary mx-1\"\n        type=\"button\"\n        onClick={wait}\n      >\n        Wait\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        type=\"button\"\n        onClick={reset}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  time: number;\n}\n\nexport const Display: React.FC<Props> = ({ time }) => {\n  const hour = `0${Math.floor((time / (1000 * 60 * 60)) % 24)}`;\n  const min = `0${Math.floor(time / 6000)}`;\n  const sec = `0${Math.floor((time / 100) % 60)}`;\n\n  return (\n    <div className=\"d-flex justify-content-center fs-3\">\n      <span>{`${hour.slice(-2)}: `}</span>\n      <span>{`${min.slice(-2)}: `}</span>\n      <span>{sec.slice(-2)}</span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  interval, buffer, fromEvent, Subject, takeUntil, throttleTime,\n} from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport './App.scss';\nimport { Btn } from './components/Btn';\nimport { Display } from './components/Display';\n\nexport const App: React.FC = () => {\n  const [time, setTime] = useState(0);\n  const [timeOn, setTimeOn] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = new Subject();\n\n    interval(10)\n      .pipe(takeUntil(unsubscribe))\n      .subscribe(() => {\n        if (timeOn) {\n          setTime(val => val + 1);\n        }\n      });\n\n    return () => {\n      unsubscribe.next(0);\n      unsubscribe.complete();\n    };\n  }, [timeOn]);\n\n  const handleStartStop = () => {\n    if (!timeOn) {\n      setTimeOn(true);\n    } else {\n      setTime(0);\n    }\n  };\n\n  const handleWait = () => {\n    const clicks$ = fromEvent(document, 'click');\n\n    clicks$.pipe(\n      buffer(clicks$.pipe(throttleTime(300))),\n      filter(clickArray => clickArray.length > 1),\n    )\n\n      .subscribe(() => setTimeOn(false));\n  };\n\n  const handleReset = () => {\n    setTime(0);\n    setTimeOn(false);\n  };\n\n  return (\n    <>\n      <Display time={time} />\n      <Btn\n        start={handleStartStop}\n        wait={handleWait}\n        reset={handleReset}\n      />\n    </>\n  );\n};\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}